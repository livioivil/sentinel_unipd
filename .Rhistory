PathScript <- '.'
PathAnalisi <- '.'
PathData <- 'G:\\My Drive\\lavorincorso\\brain_perm\\pfas_zifio_muscolo\\analisi2\\data'
# gli estremi degli intervalli sempre separati di " - " (occhio agli spazi prima e dopo il -)
# usare Inf e -Inf (senza spazio il - prima di Inf);
#    per esempio: >32 deve essere indicato come "32 - Inf" e
#                 <14 come "-Inf - 14"
tab_txt=
"ID,Group      , Nuclei_length,Nuclei_intensity,Nuclei_Ratio_W_L
1, G0          , 14 - 32, 300 - 800, 0.2 - 0.9
2, S           , 14 - 32, 800 - 1100, 0.2 - 0.9
3, G2 + early M, 16 - 32, 1100 - 3000, 0.2 - 0.9
4, M           , 11 - 16, 300 - 3000, 0.2 - 0.9
5, Large       , 32 - Inf , 300 - 3000, 0.2 - 0.9
6, Small       , -Inf - 14  , 300 - 1100, 0.2 - 0.9
"
setwd(PathScript)
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
knitr::opts_chunk$set(echo = FALSE,warning = FALSE)
load(params$file_data)
library(ggplot2)
library(data.table)
library(sjPlot)
library(ggplot2)
theme_set(theme_sjplot())
suppressPackageStartupMessages(library(dplyr))
dim(D)
require("MASS")
require(multcomp)
D=data.frame(D)
dim(D)
D$Condition=apply(cbind(as.character(D$Compound),
as.character(D$Concentration)),
1,function(x) paste(x,collapse = ":"))
D$Cond=factor(D$Condition)
dim(D)
D2=D[-grep("MetOH",D$Cond),]
dim(D2)
D$Cond=factor(D$Cond)
D$Compound=factor(D$Compound)
D$Grp=D$Group
str(D$Cond)
levels(D$Cond)
D$Cond=relevel(D$Cond,"Control:0")
D$Cond=factor(D$Cond)
contrasts(D$Plate)<- contr.sum(4)
# table(D$Cond,D$Group,D$Plate)
mod= glm.nb(Counts~Plate+Cond*Grp,data=D)
levels(D$Grp)
ngrps=nlevels(D$Grp)
nconds=23#*ngrps
base=cbind(matrix(0,nconds,4),diag(nconds))
temp=rbind(
cbind(base,matrix(0,nconds,ngrps-1+nconds*5)), #gr=1
cbind(base,matrix(0,nconds,ngrps-1),diag(nconds),matrix(0,nconds,nconds*4)), #gr=2
cbind(base,matrix(0,nconds,ngrps-1+nconds),diag(nconds),matrix(0,nconds,nconds*3)),#gr=3
cbind(base,matrix(0,nconds,ngrps-1+nconds*2),diag(nconds),matrix(0,nconds,nconds*2)),#gr=4
cbind(base,matrix(0,nconds,ngrps-1+nconds*3),diag(nconds),matrix(0,nconds,nconds*1)),#gr=5
cbind(base,matrix(0,nconds,ngrps-1+nconds*4),diag(nconds),matrix(0,nconds,nconds*0)))#,
# cbind(matrix(0,nconds,ngrps+nconds*6),diag(nconds),matrix(0,nconds,nconds*0)))#gr=6
contr_mat=temp
rownames(contr_mat)=
names(coef(mod))[-c(1:4,28:32)]
rownames(contr_mat)[1:23]=paste0(rownames(contr_mat)[1:23],":Grp1:G0")
modc=glht(mod,contr_mat)
modc_mcp=summary(modc)
M=rbind(
c(1,1,1,rep(0,20)),
c(rep(0,3),rep(1,5),rep(0,15)),
c(rep(0,8),rep(1,5),rep(0,10)),
c(rep(0,13),rep(1,5),rep(0,5)),
c(rep(0,18),rep(1,5))
)
riducente=  kronecker(diag(1, 6), M)
contr_mat0=riducente%*%contr_mat
rownames(contr_mat0)=paste(sep="_",rep(levels(D$Compound)[-1],6),rep(levels(D$Group),each=5))
modc0=glht(mod,contr_mat0)
modc0_mcp=summary(modc0)
save(mod,file="modelNbinom_fixed.Rdata",
modc,
modc_mcp,
modc0,
modc0_mcp)
summary(modc0,adjusted(type="none"))
print("POST HOC correction")
modc0_mcp
##############
# car::Anova(mod)
summary(modc,adjusted(type="none"))
print("POST HOC correction")
modc_mcp
my_plot <- function(mod){
p=plot_model(mod, type = "eff", terms = c("Cond","Grp"))
p=p+coord_flip()+scale_y_continuous(trans='log10')
temp=get_model_data(mod, type = "eff", terms = c("Cond","Grp"))
temp=data.frame(temp)
temp=temp[temp$x==1,"predicted"]
p=p + geom_hline(yintercept=temp,col="gray")
p
}
p=my_plot(mod)
p#+ggtitle("All 4 plates")
rmarkdown::render("analysis_parametric.Rmd",
params = list(eval_raw= "FALSE"),
output_file = paste0(PathScript,"/Output_2.html"))
rmarkdown::render("analysis_parametric.Rmd",
params = list(eval= "FALSE"),
output_file = paste0(PathScript,"/Output_2.html"))
source("~/github/sentinel_unipd/functions.R")
rmarkdown::render("analysis_parametric.Rmd",
params = list(eval= "FALSE"),
output_file = paste0(PathScript,"/Output_2.html"))
PathScript <- '.'
PathAnalisi <- '.'
PathData <- 'G:\\My Drive\\lavorincorso\\brain_perm\\pfas_grampo_cute/analisi2/data/'
# gli estremi degli intervalli sempre separati di " - " (occhio agli spazi prima e dopo il -)
# usare Inf e -Inf (senza spazio il - prima di Inf);
#    per esempio: >32 deve essere indicato come "32 - Inf" e
#                 <14 come "-Inf - 14"
tab_txt=
"ID,Group      , Nuclei_length,Nuclei_intensity,Nuclei_Ratio_W_L
1, G0          , 15 - 31, 300 - 900, 0.2 - 0.9
2, S           , 15 - 31, 900 - 1450, 0.2 - 0.9
3, G2 + early M, 15 - 31, 1450 - 4000, 0.2 - 0.9
4, M           , 11 - 15, 300 - 4000, 0.2 - 0.9
5, Large       , 31 - Inf , 300 - 3000, 0.2 - 0.9
6, Small       , -Inf - 11  , 300 - 1450, 0.2 - 0.9
6, Small       , 11 - 15  , -Inf - Inf, 0.2 - 0.9
"
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
knitr::opts_chunk$set(echo = TRUE,warning = FALSE)
# library(r41sqrt10)
source('utils.R')
source("functions.R")
knitr::opts_chunk$set(echo = TRUE,warning = FALSE)
# library(r41sqrt10)
source('utils.R')
source("functions.R")
#ls()
files=dir(params$PathData,full.names = TRUE)
files=files[grep("xlsx$",files)]
filesRdata=gsub("xlsx","Rdata",files)
eval_raw=eval(parse(text=params$eval_raw))
tab_txt
out=lapply(files,import_data_add_group,tab_txt)
debug(import_data_add_group)
out=lapply(files,import_data_add_group,tab_txt)
debug(add_groups)
tab
tab
str(tab)
res=apply(tab,1,function(x){#browser()
res_grp=lapply(3:5, function(i_col){
xx=as.numeric(strsplit(x[i_col]," - ")[[1]])
in_range(dati[,names(x)[i_col]],lims = xx)
}
)
temp=apply(as.data.frame(res_grp),1,prod)
})
temp=rowSums(res)
if(any(temp>1)) warning(paste0("There are ",sum(temp>1)," cells belonging to more than one group. Please check the definition of groups!! (now I set them no groups)"))
res[temp>1,]=0
as.numeric(tab$ID)
dati$Group=(res%*%(as.numeric(tab$ID)))[,1]
tab$Group=gsub(" ","",tab$Group)
dati$Group=factor(dati$Group)
dim(tab)
levels(dati$Group)
tab
tab
print(tab)
str(tab)
#rownames(tab)=tab$ID
for (l in tab$ID) levels(dati$Group)[levels(dati$Group)==l]=tab[l,"Group"]
levels(dati$Group)
levels(dati$Group)[levels(dati$Group)=="0"]="0:None"
source("~/github/sentinel_unipd/functions.R")
out=lapply(files,import_data_add_group,tab_txt)
tab_txt
#ls()
files=dir(params$PathData,full.names = TRUE)
files=files[grep("xlsx$",files)]
filesRdata=gsub("xlsx","Rdata",files)
eval_raw=eval(parse(text=params$eval_raw))
debug(add_groups)
out=lapply(files,import_data_add_group,tab_txt)
tab
str(tab)
str(temp)
table(temp)
colSums(temp)
colSums(res)
temp=rowSums(res)
head(res[temp>1,])
table(res[,4],res[,7])
PathScript <- '.'
PathAnalisi <- '.'
PathData <- 'G:\\My Drive\\lavorincorso\\brain_perm\\pfas_zifio_muscolo\\analisi2\\data'
# gli estremi degli intervalli sempre separati di " - " (occhio agli spazi prima e dopo il -)
# usare Inf e -Inf (senza spazio il - prima di Inf);
#    per esempio: >32 deve essere indicato come "32 - Inf" e
#                 <14 come "-Inf - 14"
tab_txt=
"ID,Group      , Nuclei_length,Nuclei_intensity,Nuclei_Ratio_W_L
1, G0          , 14 - 32, 300 - 800, 0.2 - 0.9
2, S           , 14 - 32, 800 - 1100, 0.2 - 0.9
3, G2 + early M, 16 - 32, 1100 - 3000, 0.2 - 0.9
4, M           , 11 - 16, 300 - 3000, 0.2 - 0.9
5, Large       , 32 - Inf , 300 - 3000, 0.2 - 0.9
6, Small       , -Inf - 11  , 300 - 3000, 0.2 - 0.9
6, Small       , 11 - 14  , 300 - 1100, 0.2 - 0.9
"
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
setwd(PathScript)
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
paste0(PathScript,"/Output_1.html")
PathData <- 'G:\\My Drive\\lavorincorso\\brain_perm\\pfas_grampo_cute/analisi2/data/'
# gli estremi degli intervalli sempre separati di " - " (occhio agli spazi prima e dopo il -)
# usare Inf e -Inf (senza spazio il - prima di Inf);
#    per esempio: >32 deve essere indicato come "32 - Inf" e
#                 <14 come "-Inf - 14"
tab_txt=
"ID,Group      , Nuclei_length,Nuclei_intensity,Nuclei_Ratio_W_L
1, G0          , 15 - 31, 300 - 900, 0.2 - 0.9
2, S           , 15 - 31, 900 - 1450, 0.2 - 0.9
3, G2 + early M, 15 - 31, 1450 - 4000, 0.2 - 0.9
4, M           , 11 - 15, 300 - 4000, 0.2 - 0.9
5, Large       , 31 - Inf , 300 - 3000, 0.2 - 0.9
6, Small       , -Inf - 11  , 300 - 1450, 0.2 - 0.9
6, Small       , 11 - 15  , -Inf - Inf, 0.2 - 0.9
"
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
# gli estremi degli intervalli sempre separati di " - " (occhio agli spazi prima e dopo il -)
# usare Inf e -Inf (senza spazio il - prima di Inf);
#    per esempio: >32 deve essere indicato come "32 - Inf" e
#                 <14 come "-Inf - 14"
tab_txt=
"ID,Group      , Nuclei_length,Nuclei_intensity,Nuclei_Ratio_W_L
1, G0          , 15 - 31, 300 - 900, 0.2 - 0.9
2, S           , 15 - 31, 900 - 1450, 0.2 - 0.9
3, G2 + early M, 15 - 31, 1450 - 4000, 0.2 - 0.9
4, M           , 11 - 15, 1450 - 4000, 0.2 - 0.9
5, Large       , 31 - Inf , 300 - 4000, 0.2 - 0.9
6, Small       , -Inf - 11  , 300 - 4000, 0.2 - 0.9
6, Small       , 11 - 15  , 300 - 1450, 0.2 - 0.9
"
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
rmarkdown::render("preprocessing_data.Rmd",
params = list(eval = "TRUE"),
output_file = paste0(PathScript,"/Output_2.html"))
rmarkdown::render("preprocessing_data.Rmd",
output_file = paste0(PathScript,"/Output_2.html"))
rmarkdown::render("analysis_parametric.Rmd",
output_file = paste0(PathScript,"/Output_2.html"))
PathData <- 'G:\\My Drive\\lavorincorso\\brain_perm\\tursiope_cute/analisi/data'
# gli estremi degli intervalli sempre separati di " - " (occhio agli spazi prima e dopo il -)
# usare Inf e -Inf (senza spazio il - prima di Inf);
#    per esempio: >32 deve essere indicato come "32 - Inf" e
#                 <14 come "-Inf - 14"
tab_txt=
"ID,Group      , Nuclei_length,Nuclei_intensity,Nuclei_Ratio_W_L
1, G0          , 9 - 30, 1000 - 3500, 0.2 - 1
2, S           , 9 - 30, 3500 - 7500, 0.2 - 1
3, G2 + early M, 14 - 30, 7500 - 16000, 0.2 - 1
4, M           , 5 - 14, 7500 - 12000, 0.2 - 1
5, Large       , 30 - Inf , 1000 - 16000, 0.2 - 1
6, Small       , -Inf - 5  , 1000 - 16000, 0.2 - 1
6, Small       , 6 - 14  , 12000 - 16000, 0.2 - 1
"
PathData <- 'G:\\My Drive\\lavorincorso\\brain_perm\\tursiope_cute/analisi/data'
setwd(PathScript)
PathScript
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
rmarkdown::render("analysis_parametric.Rmd",
output_file = paste0(PathScript,"/Output_2.html"))
source("~/github/sentinel_unipd/main_Analisi_GLM.R")
setwd("C:\\Users\\livio\\OneDrive\\Documenti\\github\\sentinel_unipd")
setwd("C:\\Users\\livio\\OneDrive\\Documenti\\github\\sentinel_unipd")
PathScript <- '.'
PathAnalisi <- '.'
PathData <- 'G:\\My Drive\\lavorincorso\\brain_perm\\pfas_bos_taurus/data'
# gli estremi degli intervalli sempre separati di " - " (occhio agli spazi prima e dopo il -)
# usare Inf e -Inf (senza spazio il - prima di Inf);
#    per esempio: >32 deve essere indicato come "32 - Inf" e
#                 <14 come "-Inf - 14"
tab_txt=
"ID,Group      , Nuclei_length,Nuclei_intensity,Nuclei_Ratio_W_L
1, G0          , 9 - 27, 300 - 900, 0.2 - 0.9
2, S           , 9 - 27, 900 - 1600, 0.2 - 0.9
3, G2 + early M, 12 - 27, 1600 - 3000, 0.2 - 0.9
4, M           , 8 - 12, 1600 - 3000, 0.2 - 0.9
5, Large       , 27 - Inf , 300 - 3000, 0.2 - 0.9
6, Small       , -Inf - 8  , 300 - 3000, 0.2 - 0.9
6, Small       , 8 - 9  , 300 - 1600, 0.2 - 0.9
"
InvokeR <- function()
{
setwd(PathScript)
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
rmarkdown::render("analysis_parametric.Rmd",
output_file = paste0(PathScript,"/Output_2.html"))
}
InvokeR();
PathData <- 'G:\\My Drive\\lavorincorso\\brain_perm\\pfas_bos_taurus/data/'
# gli estremi degli intervalli sempre separati di " - " (occhio agli spazi prima e dopo il -)
# usare Inf e -Inf (senza spazio il - prima di Inf);
#    per esempio: >32 deve essere indicato come "32 - Inf" e
#                 <14 come "-Inf - 14"
tab_txt=
"ID,Group      , Nuclei_length,Nuclei_intensity,Nuclei_Ratio_W_L
1, G0          , 9 - 27, 300 - 900, 0.2 - 0.9
2, S           , 9 - 27, 900 - 1600, 0.2 - 0.9
3, G2 + early M, 12 - 27, 1600 - 3000, 0.2 - 0.9
4, M           , 8 - 12, 1600 - 3000, 0.2 - 0.9
5, Large       , 27 - Inf , 300 - 3000, 0.2 - 0.9
6, Small       , -Inf - 8  , 300 - 3000, 0.2 - 0.9
6, Small       , 8 - 9  , 300 - 1600, 0.2 - 0.9
"
InvokeR <- function()
{
setwd(PathScript)
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
rmarkdown::render("analysis_parametric.Rmd",
output_file = paste0(PathScript,"/Output_2.html"))
}
InvokeR();
knitr::opts_chunk$set(echo = TRUE,warning = FALSE)
# library(r41sqrt10)
source('utils.R')
source("functions.R")
#ls()
files=dir(params$PathData,full.names = TRUE)
files=files[grep("xlsx$",files)]
filesRdata=gsub("xlsx","Rdata",files)
eval_raw=eval(parse(text=params$eval_raw))
if(eval_raw){
out=lapply(files,import_data_add_group,params$tab_txt)
D <- do.call("rbind", out)
rm(out)
D=D[D$Group!="0:None",]
D=D[D$Compound!="DMEM",] #"0:None"
D$Group=factor(D$Group)
D$Compound=factor(D$Compound)
D$Compound=relevel(D$Compound,"Control")
# contrasts(D$Compound)
D$Plate=factor(D$Plate)
D$Concentration=factor(D$Concentration)
# D$Condition=factor(D$Condition)
D$Column=factor(D$Column)
D$Row=factor(D$Row)
contrasts(D$Plate)=contr.sum(4)
contrasts(D$Column)=contr.sum(nlevels(D$Column))
contrasts(D$Row)=contr.sum(nlevels(D$Row))
save(D, file= "datiD.Rdata")
} else   load("datiD.Rdata")
out=lapply(files,import_data_add_group,params$tab_txt)
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData),
output_file = paste0(PathScript,"/Output_1.html"))
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData),
output_file = paste0(PathScript,"/Output_1.html"))
PathScript <- '.'
output_file = paste0(PathScript,"/Output_1.html"))
PathScript <- '.'
PathAnalisi <- '.'
PathData <- 'G:\\My Drive\\lavorincorso\\brain_perm\\pfas_bos_taurus/data/'
# gli estremi degli intervalli sempre separati di " - " (occhio agli spazi prima e dopo il -)
# usare Inf e -Inf (senza spazio il - prima di Inf);
#    per esempio: >32 deve essere indicato come "32 - Inf" e
#                 <14 come "-Inf - 14"
tab_txt=
"ID,Group      , Nuclei_length,Nuclei_intensity,Nuclei_Ratio_W_L
1, G0          , 9 - 27, 300 - 900, 0.2 - 0.9
2, S           , 9 - 27, 900 - 1600, 0.2 - 0.9
3, G2 + early M, 12 - 27, 1600 - 3000, 0.2 - 0.9
4, M           , 8 - 12, 1600 - 3000, 0.2 - 0.9
5, Large       , 27 - Inf , 300 - 3000, 0.2 - 0.9
6, Small       , -Inf - 8  , 300 - 3000, 0.2 - 0.9
6, Small       , 8 - 9  , 300 - 1600, 0.2 - 0.9
"
InvokeR <- function()
{
setwd(PathScript)
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
rmarkdown::render("analysis_parametric.Rmd",
output_file = paste0(PathScript,"/Output_2.html"))
}
InvokeR();
PathScript <- '.'
PathAnalisi <- '.'
PathData <- 'G:\\My Drive\\lavorincorso\\brain_perm\\tursiope_cute/analisi/data'
# gli estremi degli intervalli sempre separati di " - " (occhio agli spazi prima e dopo il -)
# usare Inf e -Inf (senza spazio il - prima di Inf);
#    per esempio: >32 deve essere indicato come "32 - Inf" e
#                 <14 come "-Inf - 14"
tab_txt=
"ID,Group      , Nuclei_length,Nuclei_intensity,Nuclei_Ratio_W_L
1, G0          , 9 - 30, 1000 - 3500, 0.2 - 1
2, S           , 9 - 30, 3500 - 7500, 0.2 - 1
3, G2 + early M, 14 - 30, 7500 - 16000, 0.2 - 1
4, M           , 5 - 14, 7500 - 12000, 0.2 - 1
5, Large       , 30 - Inf , 1000 - 16000, 0.2 - 1
6, Small       , -Inf - 5  , 1000 - 16000, 0.2 - 1
6, Small       , 6 - 14  , 12000 - 16000, 0.2 - 1
"
InvokeR <- function()
{
setwd(PathScript)
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
rmarkdown::render("analysis_parametric.Rmd",
output_file = paste0(PathScript,"/Output_2.html"))
}
InvokeR();
InvokeR <- function()
{
setwd(PathScript)
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
rmarkdown::render("analysis_parametric.Rmd",
output_file = paste0(PathScript,"/Output_2.html"))
}
InvokeR();
# gli estremi degli intervalli sempre separati di " - " (occhio agli spazi prima e dopo il -)
# usare Inf e -Inf (senza spazio il - prima di Inf);
#    per esempio: >32 deve essere indicato come "32 - Inf" e
#                 <14 come "-Inf - 14"
tab_txt=
"ID,Group      , Nuclei_length,Nuclei_intensity,Nuclei_Ratio_W_L
1, G0          , 9 - 30, 1000 - 3500, 0.2 - 1
2, S           , 9 - 30, 3500 - 7500, 0.2 - 1
3, G2 + early M, 14 - 30, 7500 - 16000, 0.2 - 1
4, M           , 5 - 14, 7500 - 12000, 0.2 - 1
5, Large       , 30 - Inf , 1000 - 16000, 0.2 - 1
6, Small       , -Inf - 5  , 1000 - 16000, 0.2 - 1
6, Small       , 6 - 14  , 12000 - 16000, 0.2 - 1
"
InvokeR <- function()
{
setwd(PathScript)
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
rmarkdown::render("analysis_parametric.Rmd",
output_file = paste0(PathScript,"/Output_2.html"))
}
InvokeR();
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
rmarkdown::render("out_preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
rmarkdown::render("out2_preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
PathData
PathData <- 'G:\\My Drive\\lavorincorso\\brain_perm\\tursiope_cute/analisi/data/'
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
PathData
# gli estremi degli intervalli sempre separati di " - " (occhio agli spazi prima e dopo il -)
# usare Inf e -Inf (senza spazio il - prima di Inf);
#    per esempio: >32 deve essere indicato come "32 - Inf" e
#                 <14 come "-Inf - 14"
tab_txt=
"ID,Group      , Nuclei_length,Nuclei_intensity,Nuclei_Ratio_W_L
1, G0          , 9 - 27, 300 - 900, 0.2 - 0.9
2, S           , 9 - 27, 900 - 1600, 0.2 - 0.9
3, G2 + early M, 12 - 27, 1600 - 3000, 0.2 - 0.9
4, M           , 8 - 12, 1600 - 3000, 0.2 - 0.9
5, Large       , 27 - Inf , 300 - 3000, 0.2 - 0.9
6, Small       , -Inf - 8  , 300 - 3000, 0.2 - 0.9
6, Small       , 8 - 9  , 300 - 1600, 0.2 - 0.9
"
InvokeR <- function()
{
setwd(PathScript)
rmarkdown::render("preprocessing_data.Rmd",
params = list(PathData=PathData,tab_txt=tab_txt),
output_file = paste0(PathScript,"/Output_1.html"))
rmarkdown::render("analysis_parametric.Rmd",
output_file = paste0(PathScript,"/Output_2.html"))
}
InvokeR();
